<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>App</title>
    <link rel="shortcut icon" href=../../favicon.ico>
    <link rel="stylesheet" href="../../css/bootstrap.min.css">
    <script src="../../js/jquery-3.4.1.min.js"></script>
    <script src="../../js/popper.min.js"></script>
    <script src="../../js/bootstrap.min.js"></script>

    <style type="text/css">
        @media print{
            body{display:none}
        }
        ul,ol,li{ list-style:none;}
        a{ color:#666; text-decoration:none;}
        a:hover img{ opacity:.9;}

        #waterfall{ margin:50px auto; position:relative;}
        .picList{ width:222px; box-shadow:0 0 3px #CCC; background:#FFF; margin:0 15px 30px 15px; position:absolute; display:block;}
        /*.picList:hover{ box-shadow:1px 1px 5px #BBB;}
        .picList:hover .shareIcon{ display:block;}
        .picList .shareIcon{ display:none; width:100px; height:24px; background:#fff url(images/share_icon.png) no-repeat; cursor:pointer; position:absolute; top:11px; right:11px; z-index:2; opacity:.9;}
        .picList .shareIcon:hover{ opacity:1;}*/
        .picThumbnail{ border-bottom:1px solid #EEE;}
        .picThumbnail a{ display:block; margin:11px; max-height:600px; overflow:hidden;}
        .picThumbnail img{ max-width:200px; display: block;}
        .picDescription{ padding:1px; text-align:left; padding:5px 10px; background:#F7F7F7; margin-top:1px;}
    </style>
    <script type="text/javascript">
        //屏蔽鼠标右键
        document.oncontextmenu = function(e) {
            var e = e || window.event;
            e.returnValue = false;
            return false;
        }
        //屏蔽ctrl+s 保存
        window.onkeydown = function(e) {
            if (e.ctrlKey && e.keyCode == 83) {
                alert('禁止使用ctrl+s');
                e.preventDefault();
                e.returnValue = false;
                return false;
            }
            if (e.ctrlKey && e.keyCode == 80) {
                alert('禁止使用ctrl+p');
                e.preventDefault();
                e.returnValue = false;
                return false;
            }
        }

        //屏蔽ctrl+p 打印
        /*if (e.ctrlKey && e.keyCode == 80) {
            alert('禁止使用ctrl+p');
            e.preventDefault();
            e.returnValue = false;
            return false;
        }*/
    </script>
</head>
<body>

<div class="container-fluid">
    <div class="row" >
        <div class="col-sm-12" style="padding-right: 3px;padding-left: 3px;">
            <nav class="navbar navbar-expand-lg navbar-light bg-light" style="padding-right: 0px;padding-left: 0px;">
                <a class="navbar-brand" href="/home">小猪猪</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav mr-auto">
                        <li class="nav-item active">
                            <a class="nav-link" href="/home">技术分享<span class="sr-only">(current)</span></a>
                        </li>
                        <li class="nav-item active">
                            <a class="nav-link" href="/calligraphy">写写字<span class="sr-only">(current)</span></a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/contact">联系方式</a>
                        </li>
                    </ul>
                    <form class="form-inline my-2 my-lg-0" action="" method="get">
                        <input id="wk" class="form-control mr-sm-2" type="search" value="" placeholder="Search" aria-label="Search">
                        <button class="btn btn-outline-success my-2 my-sm-0" type="button" onclick="return check(this.form)">Search</button>
                    </form>
                </div>
            </nav>
        </div>
    </div>
    <div class="row">

    </div>
</div>
<div id="waterfall"></div>
<div style="clear: both"></div>
{{#if data.isShowPagination}}
    <nav aria-label="...">
        <ul class="pagination justify-content-center" id="pagination"></ul>
    </nav>
{{/if}}
{{#if msg}}
    <div style="text-align: center; color: rgba(114,114,114,0.87);">{{msg}}</div>
{{/if}}
<script>
    let l3 ={{{data.calligraphyList}}};
    console.log(l3) ;
    let str = '';
    {{{data.calligraphyList}}}.map(function(item, i) {
        str += `<div class="picList">
                <i class="shareIcon"></i>
                <div class="picThumbnail">
                <a href="#">
                   <canvas id='canvas${i}' />
                </a>
                </div>
                <div class="picDescription">
                <p>${item.name}</p>
                <p>${item.remark}</p>
                </div>
                </div> `

    });
    $('#waterfall').html(str);
    l3.map(function (item, i) {
      let tempHeight = 0;
       let temp = (async function (item, i) {
          var canvas=document.getElementById("canvas"+i);
          var ctx=canvas.getContext("2d");
          var imgtype = 'image/jpeg';
          var img = new Image()
          img.src = item.urlPath;
          img.onload = await function() {
              var width = 200 // 压缩后的图片的宽度
              var sca = img.width / width // 缩放比例
              var height = img.height / sca
              img.width = width
              img.height = height
              canvas.setAttribute('width', width + '')
              canvas.setAttribute('height', height + '')
              // 将图片画入canvas
              ctx.drawImage(img, 0, 0, img.width, img.height)
          }
      })(item, i)
    })
    var maxHeight = [];
    function waterfall(){
        maxHeight = [];
        flagOnlyOnceRow = false;
        var wfArea = $("#waterfall"); //显示区域名称
        var wfList = $(".picList"); //内容区域名称
        var wfWidth = wfList.outerWidth(true); //获取内容区域实际宽度（含Margin值）
        var wfArr = new Array(); //创建数组，用来记录内容区域高度
        var maxCol = Math.floor( $(window).width() / wfWidth ); //窗口的宽度除以内容区域宽度，并且向下取整（得出每行能放多少列）
        for(var i = 0; i < wfList.length; i++) { //根据内容区域数量进行循环
            colHeight = wfList.eq(i).outerHeight(true); //获取每个内容区域的高度
            maxHeight.push(colHeight);
            if( i < maxCol ){ //如果i小于maxCol，那就说明是在一行里面（例如每行有4列，那就是4个为一组）
                console.log('一行')
                flagOnlyOnceRow = true;
                wfArr[i] = colHeight; //把每组内容区域的高度，放入到数组中
                wfList.eq(i).css("top",0); //第一行Li的默认Top值为0
                wfList.eq(i).css("left",i * wfWidth); //每个列的Left值就是当前列数*内容区域宽度
            }else{
                console.log('多行')
                flagOnlyOnceRow = false
                minHeight = Math.min.apply(null,wfArr); //比较数值中的值，取得最小值（也就是每行中，最小高度）
                minCol = getArrayKey(wfArr, minHeight); //最小的值对应的指针
                wfArr[minCol] += colHeight; //加上新高度后更新高度值
                wfList.eq(i).css("top",minHeight); //先得到高度最小的Li，然后把接下来的li放到它的下面
                wfList.eq(i).css("left",minCol * wfWidth); //第i个列的左坐标就是i*列的宽度
            }
            wfList.eq(i).attr('id',"post_"+i);
        };

        function getArrayKey(s, v) { //使用for in运算返回数组中某一值的对应项数(比如算出最小的高度值是数组里面的第几个)
            for( k in s ) {
                if( s[k] == v)  {
                    return k;
                }
            }
        };
        var maxH = Math.max.apply(null, wfArr);
        var fwLastLayerT = parseInt(wfList.last().css("top")); //最后一个元素的Top值
        var fwLastLayerH = wfList.last().outerHeight(true); //最后一个元素的高度
        var wfAreaH = fwLastLayerT + fwLastLayerH + "px"; //显示区域的高度为 最后一个元素的Top值+自身高度
        wfAreaH = flagOnlyOnceRow ? maxH : wfAreaH;
        wfArea.css({ "width":wfWidth * maxCol,"height":wfAreaH }); //设置显示区域宽度和高度
    }
    $(function(){
        window.onload = function() { waterfall(); } //当页面加载完毕，执行函数
        $(window).resize(function(){ //当窗口改变时，执行函数
            waterfall();
        });
    });
    console.log(maxHeight, maxHeight.join(','), '---------------')
    //width、height调用时传入具体像素值，控制大小 ,不传则默认图像大小
    function getBase64Image(img, width, height) {
        var canvas = document.createElement("canvas");
        canvas.width = width ? width : img.width;
        canvas.height = height ? height : img.height;
        var ctx = canvas.getContext("2d");
        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
        var dataURL = canvas.toDataURL();
        return dataURL;
    }
    function compressImg(base64) {
        let canvas = document.createElement('canvas');
        let ctx = canvas.getContext('2d')
        var imgtype = 'image/jpeg'
        var img = new Image()
        img.src = base64;
        img.onload = function() {
            var width = 200 // 压缩后的图片的宽度
            var sca = img.width / width // 缩放比例
            var height = img.height / sca
            img.width = width
            img.height = height
            canvas.setAttribute('width', width + '')
            canvas.setAttribute('height', height + '')
            // 将图片画入canvas
            ctx.drawImage(img, 0, 0, img.width, img.height)
            let imgData = canvas.toDataURL(imgtype, 1) //压缩后的图片
            // document.getElementById("container2").appendChild(canvas);
            /*document.body.appendChild(canvas);*/
            console.log(imgData)
            return canvas
        }
    }
    function getCanvasBase64(img) {
        var image = new Image();
        //至关重要
        image.crossOrigin = '';
        image.src = img;
        //至关重要
        var deferred = $.Deferred();
        if (img) {
            image.onload = function () {
                deferred.resolve(getBase64Image(image));//将base64传给done上传处理
                // document.getElementById("container2").appendChild(image);
            }
            return deferred.promise();//问题要让onload完成后再return sessionStorage['imgTest']
        }
    }
    /*getCanvasBase64(imgSrc)
            .then(function (base64) {
                // compressImg(base64);
                console.log("方式二》》》》》》》》》",base64);
            }, function (err) {
                console.log(err);
            });*/


    let P={{{data.P}}} || 0;
    let pageSize={{{data.pageSize}}} || 10;
    let totalCount={{{data.totalCount}}} || 0;
    let baseUrl = window.location.href;
    if(baseUrl.lastIndexOf('?') !==-1) {
        baseUrl = baseUrl.slice(0, baseUrl.lastIndexOf('?'));
    }
    console.log(baseUrl)
    function goTo (v) {
        window.location.href = `${baseUrl}?P=${v}`
    }
    let page = ((Page) => {
        let pageCount = Math.ceil(Page['totalCount'] / Page['pageSize']);
        let $$pageIndex = Number(Page['P']);
        let tempArr = [];
        for(let i= 0; i < pageCount; i++) {
            let actived = "";
            let ariaCurrent = '';
            let spanCurrent = '';
            if(($$pageIndex-1) === i) {
                actived = "page-item active";
                ariaCurrent = `aria-current="page"`;
                spanCurrent = `<span class="sr-only">(current)</span>`
            } else {
                actived = "page-item";
                ariaCurrent = '';
                spanCurrent = '';
            };
            tempArr.push(`<li class="${actived}" ${ariaCurrent}><a class="page-link" href="javascript:void(0)" onclick="goTo(${i+1})">${i+1}${spanCurrent}</a></li>`);
        }
        let isPrevDisabled = '';
        let isNextDisabled = '';
        if(($$pageIndex-1) === 0) {
            isPrevDisabled = "page-item disabled";
        } else {
            isPrevDisabled = "page-item";
        }
        if($$pageIndex === pageCount) {
            isNextDisabled = "page-item disabled";
        } else {
            isNextDisabled = "page-item";
        }
        let j = 5; // 显示分页数项
        let dom = ((t) => {
            let index = 0;
            let end = j;
            if($$pageIndex%j ===0) {
                index = $$pageIndex-(j-1);
                end = $$pageIndex+1
            } else if($$pageIndex > j && $$pageIndex !==pageCount) {
                index = $$pageIndex-(j-1);
                end = $$pageIndex+1
            } else if($$pageIndex ===pageCount) {
                index = $$pageIndex-j;
                end = pageCount
            }
            return t.slice(index, end);
        })(tempArr);
        let prev = `<li class="${isPrevDisabled}"><a class="page-link" href="javascript:void(0)" aria-label="Previous"><span aria-hidden="true">&laquo;</span></li>`;
        let next = `<li class="${isNextDisabled}"><a class="page-link" href="javascript:void(0)" aria-label="Next"><span aria-hidden="true">&raquo;</span></a></li>`;
        $(Page['el']).html(prev+dom.join('')+next);
        $(Page['el']).find('[aria-label="Previous"]').click(() => {
            window.location.href = `${baseUrl}?P=${$$pageIndex-1}`;
        });
        $(Page['el']).find('[aria-label="Next"]').click(() => {
            window.location.href = `${baseUrl}?P=${$$pageIndex+1}`;
        })
    })({
        el: '#pagination',
        P: P,
        pageSize: pageSize,
        totalCount: totalCount
    });

</script>
</body>
</html>
